    global int init?;
    ;; other


    global int biton_balance; ;; biton liq
    global int operation_price;
    global int service_collect_fee; ;; the commission we have collected
    global int service_fee_percentage;
    global int a_service_fee; ;; active a service fee in percentage
    global int b_service_fee; ;; active b service fee in percentage
    global int max_price_percentage; ;; maximum percentage mark-up
    global slice project_addr; ;; admin address
    global slice jetton_addr; ;; jetton wallet addr

    ;; other end

    ;; lp
    global int lp_total_supply;
    global int lp_collect_fee;
    global int lp_fee_percentage;
    global int lp_withdraw_comission;

    global slice lp_jwall_addr;
    global slice lp_minter_addr;

    ;; lp end

    global int int_gbl::balance;



    _ init_data() impure {
        ifnot(null?(init?)) {
            return ();
        }
        var ds = get_data().begin_parse();
        biton_balance = ds~load_coins();
        operation_price = ds~load_coins();
        service_collect_fee = ds~load_coins();
        service_fee_percentage = ds~load_uint(32);
        a_service_fee = ds~load_uint(32);
        b_service_fee = ds~load_uint(32);
        max_price_percentage = ds~load_uint(32);
        project_addr = ds~load_msg_addr();
        jetton_addr = ds~load_msg_addr();
        lp_total_supply = ds~load_coins();
        lp_collect_fee = ds~load_coins();
        lp_fee_percentage = ds~load_uint(32);
        lp_withdraw_comission = ds~load_uint(32);
        lp_jwall_addr = ds~load_msg_addr();
        lp_minter_addr = ds~load_msg_addr();
        init? = true;
    }


    _ pack_data() impure {
        set_data(begin_cell()
            .store_coins(biton_balance)
            .store_coins(operation_price)
            .store_coins(service_collect_fee)
            .store_uint(service_fee_percentage, 32)
            .store_uint(a_service_fee, 32)
            .store_uint(b_service_fee, 32)
            .store_uint(max_price_percentage, 32)
            .store_slice(project_addr)
            .store_slice(jetton_addr)
            .store_coins(lp_total_supply)
            .store_coins(lp_collect_fee)
            .store_uint(lp_fee_percentage, 32)
            .store_uint(lp_withdraw_comission, 32)
            .store_slice(lp_jwall_addr)
            .store_slice(lp_minter_addr)
            .end_cell()
        );
    }
